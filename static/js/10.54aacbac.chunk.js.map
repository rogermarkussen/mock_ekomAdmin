{"version":3,"sources":["views/CustomerManagementDetails/Summary/CustomerEditModal.js","../node_modules/@material-ui/icons/MailOutline.js","views/CustomerManagementDetails/Header.js","views/CustomerManagementDetails/Summary/CustomerInfo.js","views/CustomerManagementDetails/Summary/Kontakter.js","views/CustomerManagementDetails/Summary/SendEmails.js","views/CustomerManagementDetails/Summary/OtherActions.js","views/CustomerManagementDetails/Summary/index.js","views/CustomerManagementDetails/Invoices.js","views/CustomerManagementDetails/Logs.js","views/CustomerManagementDetails/index.js","../node_modules/@material-ui/icons/DeleteOutline.js","../node_modules/@material-ui/icons/Edit.js"],"names":["useStyles","makeStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","CustomerEditModal","open","onClose","customer","className","rest","classes","useState","values","setValues","handleFieldChange","event","persist","currentValues","target","name","type","checked","value","clsx","title","container","spacing","item","md","xs","fullWidth","label","onChange","orgnr","variant","bregNavn","gruppering","slettet","aktiv","onClick","color","defaultProps","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","d","Header","Typography","component","content","padding","flexDirection","alignItems","marginLeft","buttonIcon","marginRight","CustomerInfo","openEdit","setOpenEdit","Card","CardHeader","Divider","CardContent","Table","TableBody","TableRow","TableCell","selected","CardActions","Button","Kontakter","kontakter","TableHead","map","kontakt","key","id","fornavn","etternavn","tlf","epost","sendButton","marginTop","mailIcon","table","cell","SendEmails","mainActions","display","notice","deleteButton","palette","common","white","backgroundColor","error","main","dark","OtherActions","Summary","setCustomer","useEffect","mounted","axios","get","then","response","data","tilbyder","Grid","lg","xl","inner","minWidth","Invoices","methodCell","statusCell","Logs","logs","setLogs","options","suppressScrollY","align","log","moment","opprettet","format","hendelse","kom","innrapportering","innrap_delar","innrap_ar","auto","bulk","length","RouterLink","size","to","paddingTop","paddingBottom","tabs","divider","colors","grey","CustomerManagementDetails","match","history","params","currentTab","tab","find","Page","Container","Tabs","push","scrollButtons","Tab"],"mappings":"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","file":"static/js/10.54aacbac.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  TextField,\n  Switch,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction CustomerEditModal({ open, onClose, customer, className, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    ...customer\n  });\n\n  const handleFieldChange = event => {\n    event.persist();\n    setValues(currentValues => ({\n      ...currentValues,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form>\n          <CardHeader title=\"Endre tilbyder\" />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Orgnummer\"\n                  name=\"orgnr\"\n                  onChange={handleFieldChange}\n                  value={values.orgnr}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Brreg-navn\"\n                  name=\"bregNavn\"\n                  onChange={handleFieldChange}\n                  value={values.bregNavn}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Gruppering\"\n                  name=\"gruppering\"\n                  onChange={handleFieldChange}\n                  value={values.gruppering}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Slettet\"\n                  name=\"slettet\"\n                  onChange={handleFieldChange}\n                  value={values.slettet}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Aktiv\"\n                  name=\"aktiv\"\n                  onChange={handleFieldChange}\n                  value={values.aktiv}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions className={classes.actions}>\n            <Button onClick={onClose}>Lukk</Button>\n            <Button color=\"primary\" onClick={onClose} variant=\"contained\">\n              Lagre\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nCustomerEditModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCustomerEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEditModal;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const customer = {\n    name: 'Telenor'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\nimport Label from 'src/components/Label';\nimport CustomerEditModal from './CustomerEditModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction CustomerInfo({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Tilbyder detaljer\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Orgnummer</TableCell>\n              <TableCell>{customer.orgnr}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Brreg-navn</TableCell>\n              <TableCell>{customer.bregNavn}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gruppering</TableCell>\n              <TableCell>{customer.gruppering}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Slettet</TableCell>\n              <TableCell>{customer.slettet}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Aktiv</TableCell>\n              <TableCell>{customer.aktiv}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Endre\n        </Button>\n      </CardActions>\n      <CustomerEditModal\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      />\n    </Card>\n  );\n}\n\nCustomerInfo.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerInfo;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Kontakter({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [openEdit, setOpenEdit] = useState(false);\n  const kontakter = customer.kontakter;\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Kontaktpersoner\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Fornavn</TableCell>\n              <TableCell>Etternavn</TableCell>\n              <TableCell>Telefon</TableCell>\n              <TableCell>Epost</TableCell>\n              <TableCell>Aktiv</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {kontakter.map(kontakt => (\n              <TableRow key={kontakt.id}>\n                <TableCell>{kontakt.fornavn}</TableCell>\n                <TableCell>{kontakt.etternavn}</TableCell>\n                <TableCell>{kontakt.tlf}</TableCell>\n                <TableCell>{kontakt.epost}</TableCell>\n                <TableCell>{kontakt.aktiv ? 'Ja' : 'Nei'}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n\nKontakter.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default Kontakter;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {},\n  sendButton: {\n    marginTop: theme.spacing(2)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst options = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nfunction SendEmails({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [option, setOption] = useState(options[0]);\n\n  const handleChange = (event) => {\n    event.persist();\n    setOption(event.target.value);\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={handleChange}\n          select\n          // eslint-disable-next-line react/jsx-sort-props\n          SelectProps={{ native: true }}\n          value={option}\n          variant=\"outlined\"\n        >\n          {options.map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Button\n          className={classes.sendButton}\n          variant=\"contained\"\n        >\n          <MaiIcon className={classes.mailIcon} />\n          Send email\n        </Button>\n        <Table className={classes.table}>\n          <TableBody>\n            {customer.emails.map(email => (\n              <TableRow key={email.id}>\n                <TableCell className={classes.cell}>\n                  {moment(email.created_at).format('DD/MM/YYYY | HH:MM')}\n                </TableCell>\n                <TableCell className={classes.cell}>\n                  {email.description}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n\nSendEmails.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default SendEmails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  mainActions: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  notice: {\n    marginTop: theme.spacing(1)\n  },\n  deleteButton: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction OtherActions({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Diverse\" />\n      <Divider />\n      <CardContent>\n        <div className={classes.mainActions}>\n          <Button>\n            <GetAppIcon className={classes.buttonIcon} />\n            Eksporter tilbyderdata\n          </Button>\n        </div>\n        <Typography className={classes.notice} variant=\"body2\">\n          Vær helt sikker før du sletter en tilbyder. Dette kan ikke omgjøres!\n        </Typography>\n        <Button className={classes.deleteButton}>\n          <DeleteIcon className={classes.buttonIcon} />\n          Slett tilbyder\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nOtherActions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default OtherActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport CustomerInfo from './CustomerInfo';\nimport Kontakter from './Kontakter';\nimport SendEmails from './SendEmails';\nimport OtherActions from './OtherActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Summary({ className, ...rest }) {\n  const classes = useStyles();\n  const [customer, setCustomer] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomer = () => {\n      axios.get('/api/management/customers/1/summary').then(response => {\n        if (mounted) {\n          setCustomer(response.data.tilbyder);\n        }\n      });\n    };\n\n    fetchCustomer();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <CustomerInfo customer={customer} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={6} xs={12}>\n        <Kontakter customer={customer} />\n      </Grid>\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <OtherActions />\n      </Grid>\n    </Grid>\n  );\n}\n\nSummary.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Summary;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nfunction Invoices({ className, ...rest }) {\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      axios.get('/api/management/customers/1/invoices').then(response => {\n        if (mounted) {\n          setInvoices(response.data.invoices);\n        }\n      });\n    }\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  methodCell: {\n    width: 100\n  },\n  statusCell: {\n    width: 64\n  }\n}));\n\nfunction Logs({ className, ...rest }) {\n  const classes = useStyles();\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchLogs = () => {\n      axios.get('/api/management/customers/1/logs').then(response => {\n        if (mounted) {\n          setLogs(response.data.logs);\n        }\n      });\n    };\n\n    fetchLogs();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Tilbyderhendelser\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar options={{ suppressScrollY: true }}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Dato</TableCell>\n                    <TableCell>Hendelse</TableCell>\n                    <TableCell>Kommentar</TableCell>\n                    <TableCell>Innrapportering</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Antall</TableCell>\n                    <TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {logs.map(log => (\n                    <TableRow key={log.id}>\n                      <TableCell>\n                        {moment(log.opprettet).format('YYYY/MM/DD')}\n                      </TableCell>\n                      <TableCell>{log.hendelse}</TableCell>\n                      <TableCell>{log.kom}</TableCell>\n                      <TableCell>\n                        {log.innrapportering\n                          ? log.innrap_delar + ' ' + log.innrap_ar\n                          : ''}\n                      </TableCell>\n                      <TableCell>{log.auto ? 'Auto' : 'Manuell'}</TableCell>\n                      <TableCell>\n                        {log.bulk.length ? log.bulk.length : 1}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          Detaljer\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Logs;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Tabs,\n  Tab,\n  Divider,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Summary from './Summary';\nimport Invoices from './Invoices';\nimport Logs from './Logs';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction CustomerManagementDetails({ match, history }) {\n  const classes = useStyles();\n  const { id, tab: currentTab } = match.params;\n  const tabs = [\n    { value: 'summary', label: 'Tilbyder' },\n    { value: 'logs', label: 'Hendelser' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  if (!currentTab) {\n    return <Redirect to={`/management/customers/${id}/summary`} />;\n  }\n\n  if (!tabs.find((tab) => tab.value === currentTab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Tilbyder detaljer\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Tabs\n          className={classes.tabs}\n          onChange={handleTabsChange}\n          scrollButtons=\"auto\"\n          value={currentTab}\n          variant=\"scrollable\"\n        >\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.value}\n              label={tab.label}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n        <Divider className={classes.divider} />\n        <div className={classes.content}>\n          {currentTab === 'summary' && <Summary />}\n          {currentTab === 'logs' && <Logs />}\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}