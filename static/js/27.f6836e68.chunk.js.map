{"version":3,"sources":["views/ProjectCreate/AboutAuthor.js","components/RichEditor/EditorToolbar.js","components/RichEditor/block.js","components/RichEditor/index.js","views/Forms/SimpleForm.js","views/Forms/index.js","utils/bytesToSize.js","components/FilesDropzone.js"],"names":["useStyles","makeStyles","theme","root","option","border","palette","divider","display","alignItems","padding","spacing","maxWidth","marginTop","selectedOption","backgroundColor","colors","grey","optionRadio","margin","optionDetails","marginLeft","options","value","title","description","AboutAuthor","className","rest","classes","useState","selected","setSelected","clsx","map","key","checked","color","onClick","event","handleChange","gutterBottom","variant","useStyles1","inner","useStyles2","button","width","height","minWidth","icon","activeButton","fade","primary","main","BLOCK_TYPES","blockType","tooltip","text","FormatQuoteIcon","FormatListBulletedIcon","FormatListNumberedIcon","CodeIcon","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","INLINE_STYLES","inlineStyle","FormatBoldIcon","FormatItalicIcon","FormatUnderlined","ButtonBase","active","children","Tooltip","Button","BlockTypeButtons","editorState","onToggle","selection","getSelection","getCurrentContent","getBlockForKey","getStartKey","getType","blockData","getData","includes","get","preventDefault","handleClick","InlineStyleButtons","props","currentStyle","getCurrentInlineStyle","has","EditorToolbar","newBlockRenderMap","Map","blockRenderMap","DefaultDraftBlockRenderMap","merge","editorContainer","minHeight","outline","typography","body2","body1","h1","h2","h3","h4","h5","h6","subtitle1","fontFamily","fontSize","textAlignLeft","textAlign","textAlignCenter","textAlignRight","textAlignJustify","capitalize","string","charAt","toUpperCase","slice","RichEditor","placeholder","editorRef","useRef","EditorState","createEmpty","setEditorState","handleEditorChange","newState","Paper","type","newContentState","Modifier","setBlockData","newEditorState","push","RichUtils","toggleBlockType","toggleInlineStyle","Divider","aria-label","role","current","focus","tabIndex","blockStyleFn","contentBlock","handleKeyCommand","command","keyBindingFn","keyCode","getDefaultKeyBinding","onTab","onChange","ref","spellCheck","schema","email","presence","allowEmpty","message","password","policy","policyCheckbox","submitButton","SimpleForm","isValid","values","touched","errors","formState","setFormState","persist","prevFormState","target","name","hasError","field","useEffect","validate","Card","CardContent","autoComplete","TextField","error","fullWidth","helperText","label","Checkbox","Typography","Link","component","RouterLink","to","underline","FormHelperText","disabled","size","paddingTop","paddingBottom","marginBottom","section","Forms","Page","Container","href","FilesDropzone","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","dropZone","justifyContent","flexWrap","opacity","cursor","dragActive","image","info","list","maxHeight","actions","files","setFiles","handleDrop","useCallback","acceptedFiles","prevFiles","concat","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","alt","src","length","suppressScrollX","file","uuid","primaryTypographyProps","secondary","bytesToSize","edge"],"mappings":"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","file":"static/js/27.f6836e68.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Radio,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst options = [\n  {\n    value: 'freelancer',\n    title: 'I\\'m a freelancer',\n    description: 'I\\'m looking for teamates to join in a personal project'\n  },\n  {\n    value: 'projectOwner',\n    title: 'I’m a project owner',\n    description:\n      'I\\'m looking for freelancer or contractors to take care of my project'\n  },\n  {\n    value: 'affiliate',\n    title: 'I want to join affiliate',\n    description:\n      'I\\'m looking for freelancer or contractors to take care of my project'\n  }\n];\n\nfunction AboutAuthor({ className, ...rest }) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(options[0].value);\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Who are you exactly?\" />\n      <CardContent>\n        {options.map((option) => (\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option.value\n            })}\n            key={option.value}\n          >\n            <Radio\n              checked={selected === option.value}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={(event) => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.title}\n              </Typography>\n              <Typography variant=\"body1\">{option.description}</Typography>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutAuthor;\n","/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  button: {\n    padding: 0,\n    width: 32,\n    height: 32,\n    minWidth: 32,\n    color: theme.palette.icon,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  activeButton: {\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\n    color: theme.palette.primary.main\n  }\n}));\n\nconst BLOCK_TYPES = [\n  {\n    blockType: 'header-one',\n    tooltip: 'Heading 1',\n    text: 'H1'\n  },\n  {\n    blockType: 'header-two',\n    tooltip: 'Heading 2',\n    text: 'H2'\n  },\n  {\n    blockType: 'header-three',\n    tooltip: 'Heading 3',\n    text: 'H3'\n  },\n  {\n    blockType: 'header-four',\n    tooltip: 'Heading 4',\n    text: 'H4'\n  },\n  {\n    blockType: 'header-five',\n    tooltip: 'Heading 5',\n    text: 'H5'\n  },\n  {\n    blockType: 'header-six',\n    tooltip: 'Heading 6',\n    text: 'H6'\n  },\n  {\n    blockType: 'blockquote',\n    tooltip: 'Blockquote',\n    icon: FormatQuoteIcon\n  },\n  {\n    blockType: 'unordered-list-item',\n    tooltip: 'Unordered list',\n    icon: FormatListBulletedIcon\n  },\n  {\n    blockType: 'ordered-list-item',\n    tooltip: 'Ordered list',\n    icon: FormatListNumberedIcon\n  },\n  {\n    blockType: 'code-block',\n    tooltip: 'Code Block',\n    icon: CodeIcon\n  },\n  {\n    blockType: 'left',\n    tooltip: 'Align left',\n    icon: FormatAlignLeftIcon\n  },\n  {\n    blockType: 'center',\n    tooltip: 'Align center',\n    icon: FormatAlignCenterIcon\n  },\n  {\n    blockType: 'right',\n    tooltip: 'Align right',\n    icon: FormatAlignRightIcon\n  },\n  {\n    blockType: 'justify',\n    tooltip: 'Justify',\n    icon: FormatAlignJustifyIcon\n  }\n];\n\nconst INLINE_STYLES = [\n  {\n    inlineStyle: 'BOLD',\n    tooltip: 'Bold',\n    icon: FormatBoldIcon\n  },\n  {\n    inlineStyle: 'ITALIC',\n    tooltip: 'Italic',\n    icon: FormatItalicIcon\n  },\n  {\n    inlineStyle: 'UNDERLINE',\n    tooltip: 'Underline',\n    icon: FormatUnderlined\n  },\n  {\n    inlineStyle: 'CODE',\n    tooltip: 'Monospace',\n    icon: CodeIcon\n  }\n];\n\nfunction ButtonBase({\n  active, tooltip, children, ...rest\n}) {\n  const classes = useStyles2();\n\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        {...rest}\n        className={clsx(classes.button, {\n          [classes.activeButton]: active\n        })}\n      >\n        {children}\n      </Button>\n    </Tooltip>\n  );\n}\n\nButtonBase.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.string\n};\n\nfunction BlockTypeButtons({ editorState, onToggle }) {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n  const blockData = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getData();\n\n  const handleClick = (event, value) => {\n    event.preventDefault();\n    onToggle('blockType', value);\n  };\n\n  return (\n    <>\n      {BLOCK_TYPES.map((button) => {\n        let active = false;\n\n        if (['left', 'center', 'right', 'justify'].includes(button.blockType)) {\n          active = blockData.get('text-align') === button.blockType;\n        } else {\n          active = button.blockType === blockType;\n        }\n\n        return (\n          <ButtonBase\n            active={active}\n            key={button.blockType}\n            onClick={(event) => handleClick(event, button.blockType)}\n            tooltip={button.tooltip}\n          >\n            {button.icon ? <button.icon /> : button.text}\n          </ButtonBase>\n        );\n      })}\n    </>\n  );\n}\n\nBlockTypeButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nconst InlineStyleButtons = (props) => {\n  const { editorState, onToggle } = props;\n\n  const handleClick = (event, inlineStyle) => {\n    event.preventDefault();\n    onToggle('inlineStyle', inlineStyle);\n  };\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <>\n      {INLINE_STYLES.map((button) => (\n        <ButtonBase\n          active={currentStyle.has(button.inlineStyle)}\n          key={button.inlineStyle}\n          onClick={(event) => handleClick(event, button.inlineStyle)}\n          tooltip={button.tooltip}\n        >\n          {button.icon ? <button.icon /> : button.text}\n        </ButtonBase>\n      ))}\n    </>\n  );\n};\n\nInlineStyleButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nfunction EditorToolbar({\n  editorState, onToggle, className, ...rest\n}) {\n  const classes = useStyles1();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <PerfectScrollbar>\n        <div className={classes.inner}>\n          <BlockTypeButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n          <InlineStyleButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n        </div>\n      </PerfectScrollbar>\n    </div>\n  );\n}\n\nEditorToolbar.propTypes = {\n  className: PropTypes.string,\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nexport default EditorToolbar;\n","import { Map } from 'immutable';\nimport { EditorState, DefaultDraftBlockRenderMap, Modifier } from 'draft-js';\n\nexport function setBlockData(editorState, data) {\n  const newContentState = Modifier.setBlockData(\n    editorState.getCurrentContent(),\n    editorState.getSelection(),\n    data\n  );\n\n  return EditorState.push(editorState, newContentState, 'change-block-data');\n}\n\n// DraftJS uses 'div' tags inside every block. When we use 'p' tag for paragraphs,\n// we get a warning because \"div\" tag cannot be inside a \"p\" tag.\nconst newBlockRenderMap = Map({\n  // unstyled: {\n  //   element: 'p'\n  // },\n  // paragraph: {\n  //   element: 'p'\n  // }\n});\n\nexport const blockRenderMap = DefaultDraftBlockRenderMap.merge(\n  newBlockRenderMap\n);\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  Modifier,\n  getDefaultKeyBinding\n} from 'draft-js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Divider } from '@material-ui/core';\nimport EditorToolbar from './EditorToolbar';\nimport { blockRenderMap } from './block';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  editorContainer: {\n    padding: theme.spacing(2),\n    minHeight: 400,\n    '&:focus': {\n      outline: 'none'\n    },\n    '& .public-DraftEditorPlaceholder-root': {\n      ...theme.typography.body2\n    },\n    '& .public-DraftEditorPlaceholder-hasFocus': {\n      display: 'none'\n    },\n    '& .public-DraftEditor-content': {\n      ...theme.typography.body1,\n      '& h1': {\n        ...theme.typography.h1\n      },\n      '& h2': {\n        ...theme.typography.h2\n      },\n      '& h3': {\n        ...theme.typography.h3\n      },\n      '& h4': {\n        ...theme.typography.h4\n      },\n      '& h5': {\n        ...theme.typography.h5\n      },\n      '& h6': {\n        ...theme.typography.h6\n      },\n      '& blockquote': {\n        ...theme.typography.subtitle1\n      },\n      '& ul': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& ol': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& pre': {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2\n      }\n    }\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  textAlignCenter: {\n    textAlign: 'center'\n  },\n  textAlignRight: {\n    textAlign: 'right'\n  },\n  textAlignJustify: {\n    textAlign: 'justify'\n  }\n}));\n\nconst capitalize = (string) => string.charAt(0).toUpperCase() + string.slice(1);\n\nfunction RichEditor({ placeholder, className, ...rest }) {\n  const classes = useStyles();\n  const editorRef = useRef(null);\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleContainerClick = () => {\n    editorRef.current.focus();\n  };\n\n  const handleToolbarToggle = (type, value) => {\n    if (type === 'blockType') {\n      if (['left', 'center', 'right', 'justify'].includes(value)) {\n        const newContentState = Modifier.setBlockData(\n          editorState.getCurrentContent(),\n          editorState.getSelection(),\n          { 'text-align': value }\n        );\n\n        const newEditorState = EditorState.push(\n          editorState,\n          newContentState,\n          'change-block-data'\n        );\n\n        setEditorState(newEditorState);\n        return;\n      }\n\n      setEditorState(RichUtils.toggleBlockType(editorState, value));\n    } else {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, value));\n    }\n  };\n\n  const handleEditorChange = (newState) => {\n    setEditorState(newState);\n  };\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      handleEditorChange(newState);\n      return true;\n    }\n\n    return false;\n  };\n\n  const mapKeyToEditorCommand = (event) => {\n    if (event.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(event, editorState, 4);\n\n      if (newEditorState !== editorState) {\n        handleEditorChange(newEditorState);\n      }\n\n      return;\n    }\n\n    return getDefaultKeyBinding(event);\n  };\n\n  const blockStyleFn = (contentBlock) => {\n    const textAlign = contentBlock.getData().get('text-align');\n\n    if (textAlign) {\n      return classes[`textAlign${capitalize(textAlign)}`];\n    }\n\n    return '';\n  };\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <EditorToolbar\n        editorState={editorState}\n        onToggle={handleToolbarToggle}\n      />\n      <Divider />\n      <div\n        aria-label=\"Editor Container\"\n        className={classes.editorContainer}\n        role=\"button\"\n        onClick={handleContainerClick}\n        tabIndex={0}\n      >\n        <Editor\n          blockRenderMap={blockRenderMap}\n          blockStyleFn={blockStyleFn}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={handleEditorChange}\n          placeholder={placeholder}\n          ref={editorRef}\n          spellCheck\n        />\n      </div>\n    </Paper>\n  );\n}\n\nRichEditor.propTypes = {\n  className: PropTypes.string,\n  placeholder: PropTypes.string\n};\n\nexport default RichEditor;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Link,\n  Checkbox,\n  FormHelperText,\n  Typography,\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  },\n  policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  policy: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  submitButton: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SimpleForm({ className, ...rest }) {\n  const classes = useStyles();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      values: {\n        ...prevFormState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...prevFormState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const hasError = (field) => (!!(formState.touched[field] && formState.errors[field]));\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      isValid: !errors,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <form autoComplete=\"off\">\n          <TextField\n            error={hasError('email')}\n            fullWidth\n            helperText={hasError('email') ? formState.errors.email[0] : null}\n            label=\"Email address\"\n            margin=\"normal\"\n            name=\"email\"\n            onChange={handleChange}\n            value={formState.values.email || ''}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={hasError('password')}\n            fullWidth\n            helperText={\n              hasError('password') ? formState.errors.password[0] : null\n            }\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={formState.values.password || ''}\n            variant=\"outlined\"\n          />\n          <div className={classes.policy}>\n            <Checkbox\n              checked={formState.values.policy || false}\n              className={classes.policyCheckbox}\n              color=\"primary\"\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n            I have read the\n              {' '}\n              <Link\n                color=\"secondary\"\n                component={RouterLink}\n                to=\"#\"\n                underline=\"always\"\n                variant=\"h6\"\n              >\n              Terms and Conditions\n              </Link>\n            </Typography>\n          </div>\n          {hasError('policy') && (\n            <FormHelperText error>{formState.errors.policy[0]}</FormHelperText>\n          )}\n          <Button\n            className={classes.submitButton}\n            color=\"secondary\"\n            disabled={!formState.isValid}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Click to Sign Up\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\nSimpleForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SimpleForm;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Divider,\n  Typography,\n  Link,\n  Paper,\n  Card,\n  CardContent,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport AboutAuthor from 'src/views/ProjectCreate/AboutAuthor';\nimport RichEditor from 'src/components/RichEditor';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport SimpleForm from './SimpleForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  section: {\n    '& + &': {\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\n\nfunction Forms() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Forms\"\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"overline\">Components</Typography>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n          Forms\n        </Typography>\n        <Divider className={classes.divider} />\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Simple Form\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"subtitle2\"\n          >\n            We used the default styiling as we think it fits our design aesthetic best. For more information on how to do that, visit\n            {' '}\n            <Link\n              href=\"https://material-ui.com/\"\n              target=\"_blank\"\n            >\n              Material-UI\n            </Link>\n            {' '}\n            documentation.\n          </Typography>\n          <SimpleForm />\n        </div>\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Radio Forms\n          </Typography>\n          <AboutAuthor />\n        </div>\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            WYSIWYG Editor\n          </Typography>\n          <Paper>\n            <RichEditor />\n          </Paper>\n        </div>\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            File Uploader\n          </Typography>\n          <Card>\n            <CardContent>\n              <FilesDropzone />\n            </CardContent>\n          </Card>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Forms;\n","export default (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { useDropzone } from 'react-dropzone';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Tooltip,\n  colors\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: colors.grey[50],\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: colors.grey[50],\n    opacity: 0.5\n  },\n  image: {\n    width: 130\n  },\n  info: {\n    marginTop: theme.spacing(1)\n  },\n  list: {\n    maxHeight: 320\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nfunction FilesDropzone({ className, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    setFiles((prevFiles) => [...prevFiles].concat(acceptedFiles));\n  }, []);\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"./images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select files\n          </Typography>\n          <Typography\n            className={classes.info}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            Drop files here or click\n            {' '}\n            <Link underline=\"always\">browse</Link>\n            {' '}\n            thorough your machine\n          </Typography>\n        </div>\n      </div>\n      {files.length > 0 && (\n        <>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem\n                  divider={i < files.length - 1}\n                  key={uuid()}\n                >\n                  <ListItemIcon>\n                    <FileCopyIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary={bytesToSize(file.size)}\n                  />\n                  <Tooltip title=\"More options\">\n                    <IconButton edge=\"end\">\n                      <MoreIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItem>\n              ))}\n            </List>\n          </PerfectScrollbar>\n          <div className={classes.actions}>\n            <Button\n              onClick={handleRemoveAll}\n              size=\"small\"\n            >\n              Remove all\n            </Button>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Upload files\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n"],"sourceRoot":""}