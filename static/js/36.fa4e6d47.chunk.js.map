{"version":3,"sources":["views/CustomerManagementDetails/Summary/CustomerEditModal.js","views/Modals/BaseModal.js","views/Modals/index.js"],"names":["useStyles","makeStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","actions","justifyContent","CustomerEditModal","open","onClose","customer","className","rest","classes","useState","values","setValues","handleFieldChange","event","persist","currentValues","target","name","type","checked","value","clsx","title","container","spacing","item","md","xs","fullWidth","label","onChange","orgnr","variant","bregNavn","gruppering","slettet","aktiv","onClick","color","defaultProps","marginTop","height","BaseModal","Modal","Card","CardHeader","Divider","CardContent","Typography","CardActions","Button","paddingTop","paddingBottom","divider","backgroundColor","colors","grey","marginBottom","section","Modals","openBase","setOpenBase","openCustomer","setOpenCustomer","Page","Container","gutterBottom","email","phone","country","state","address1","address2","verified","discountedPrices"],"mappings":"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","file":"static/js/36.fa4e6d47.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  TextField,\n  Switch,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction CustomerEditModal({ open, onClose, customer, className, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    ...customer\n  });\n\n  const handleFieldChange = event => {\n    event.persist();\n    setValues(currentValues => ({\n      ...currentValues,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal onClose={onClose} open={open}>\n      <Card {...rest} className={clsx(classes.root, className)}>\n        <form>\n          <CardHeader title=\"Endre tilbyder\" />\n          <Divider />\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Orgnummer\"\n                  name=\"orgnr\"\n                  onChange={handleFieldChange}\n                  value={values.orgnr}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Brreg-navn\"\n                  name=\"bregNavn\"\n                  onChange={handleFieldChange}\n                  value={values.bregNavn}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Gruppering\"\n                  name=\"gruppering\"\n                  onChange={handleFieldChange}\n                  value={values.gruppering}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Slettet\"\n                  name=\"slettet\"\n                  onChange={handleFieldChange}\n                  value={values.slettet}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Aktiv\"\n                  name=\"aktiv\"\n                  onChange={handleFieldChange}\n                  value={values.aktiv}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions className={classes.actions}>\n            <Button onClick={onClose}>Lukk</Button>\n            <Button color=\"primary\" onClick={onClose} variant=\"contained\">\n              Lagre\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nCustomerEditModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCustomerEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEditModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Typography,\n  Divider,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  container: {\n    marginTop: theme.spacing(3),\n    height: 200\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction BaseModal({\n  open, onClose, className, ...rest\n}) {\n  const classes = useStyles();\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <CardHeader title=\"Simple Modal\" />\n        <Divider />\n        <CardContent>\n          <Typography variant=\"body1\">\n            One fine body...\n          </Typography>\n        </CardContent>\n        <Divider />\n        <CardActions className={classes.actions}>\n          <Button onClick={onClose}>\n            Dismiss\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={onClose}\n            variant=\"contained\"\n          >\n            Confirm\n          </Button>\n        </CardActions>\n      </Card>\n    </Modal>\n  );\n}\n\nBaseModal.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nBaseModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default BaseModal;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Divider,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerEditModal from 'src/views/CustomerManagementDetails/Summary/CustomerEditModal';\nimport BaseModal from './BaseModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3)\n  },\n  section: {\n    '& + &': {\n      marginTop: theme.spacing(5)\n    }\n  }\n}));\n\nfunction Modals() {\n  const classes = useStyles();\n  const [openBase, setOpenBase] = useState(false);\n  const [openCustomer, setOpenCustomer] = useState(false);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Modals\"\n    >\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"overline\">\n          Components\n        </Typography>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n          Modals\n        </Typography>\n        <Divider className={classes.divider} />\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Simple Modal\n          </Typography>\n          <Card>\n            <CardContent>\n              <Button\n                color=\"primary\"\n                onClick={() => setOpenBase(true)}\n                variant=\"contained\"\n              >\n                Open Base Modal\n              </Button>\n            </CardContent>\n          </Card>\n          <BaseModal\n            onClose={() => setOpenBase(false)}\n            open={openBase}\n          />\n        </div>\n        <div className={classes.section}>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n          >\n            Example Modal\n          </Typography>\n          <Card>\n            <CardContent>\n              <Button\n                color=\"primary\"\n                onClick={() => setOpenCustomer(true)}\n                variant=\"contained\"\n              >\n                Open Example Modal\n              </Button>\n            </CardContent>\n          </Card>\n          <CustomerEditModal\n            customer={{\n              email: 'j.doe@domain.com',\n              name: 'J Doe',\n              phone: '+4 505 950 823',\n              country: 'USA',\n              state: 'California',\n              address1: '',\n              address2: '',\n              verified: true,\n              discountedPrices: false\n            }}\n            onClose={() => setOpenCustomer(false)}\n            open={openCustomer}\n          />\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Modals;\n"],"sourceRoot":""}